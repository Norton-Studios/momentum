model Tenant {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  users                   User[]
  tenantDataSourceConfigs TenantDataSourceConfig[]

  @@map("tenant")
  @@schema("core")
}

model User {
  id        String   @id @default(cuid())
  tenantId  String   @map("tenant_id")
  email     String   @unique
  password  String
  apiToken  String   @unique @map("api_token")
  isAdmin   Boolean  @default(false) @map("is_admin")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId])
  @@index([email])
  @@index([apiToken])
  @@map("user")
  @@schema("core")
}

model TenantDataSourceConfig {
  id         String   @id @default(cuid())
  tenantId   String   @map("tenant_id")
  dataSource String   @map("data_source")
  key        String
  value      String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, dataSource, key])
  @@index([tenantId])
  @@map("tenant_data_source_config")
  @@schema("core")
}